openapi: 3.0.4
info:
  title: AInterview API
  version: 1.0.0
paths:
  /sign/login:
    post:
      tags:
        - Auth
      summary: 로그인
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUserRequest'
      responses:
        '200':
          description: 사용자 로그인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginUserResponse'
        '400':
          description: 필수 필드 미전달
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: 에러 메시지
              examples:
                missingLoginUserId:
                  summary: loginUserId 미전달
                  value:
                    success: false
                    message: loginUserId가 필요합니다.
                missingPassword:
                  summary: password 미전달
                  value:
                    success: false
                    message: password가 필요합니다.
        '401':
          description: 잘못된 비밀번호
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 비밀번호를 틀렸습니다.
        '404':
          description: 해당 유저를 찾을 수 없음
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 해당 유저를 찾을 수가 없습니다.
        '500':
          description: 로그인 처리 중 오류
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 로그인 처리 중 오류가 발생했습니다.
  /sign/signup:
    post:
      tags:
        - Auth
      summary: 회원가입
      operationId: signupUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signupUserRequest'
      responses:
        '201':
          description: 회원가입 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signupUserResponse'
        '400':
          description: 필수 필드 미전달 또는 형식에 맞지 않는 값 존재
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              examples:
                missingLoginUserId:
                  summary: loginUserId 미전달
                  value:
                    success: false
                    message: loginUserId가 필요합니다.
                missingPassword:
                  summary: password 미전달
                  value:
                    success: false
                    message: password가 필요합니다.
                missingNickname:
                  summary: nickname 미전달
                  value:
                    success: false
                    message: nickname이 필요합니다.
                invalidLoginUserId:
                  summary: loginUserId 조건 불충족
                  value:
                    success: false
                    message: 'loginUserId는 3-15자의 영어, 숫자만 가능합니다.'
                invalidPassword:
                  summary: password 조건 불충족
                  value:
                    success: false
                    message: 'password는 8-16자의 영어대소문자, 숫자, 특수문자(!,@,#,$,%,^,&,*)만 가능합니다.'
                invalidNickname:
                  summary: nickname 조건 불충족
                  value:
                    success: false
                    message: 'nickname은 2-8자의 한글, 영어, 숫자만 가능합니다. (부적절한 단어 사용 x)'
                termsNotAccepted:
                  summary: 서비스 이용약관 동의 안함
                  value:
                    success: false
                    message: 서비스 이용약관에 동의해주세요.
        '409':
          description: 중복된 아이디
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 중복된 아이디입니다.
        '500':
          description: 회원가입 처리 중 오류
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 회원가입 처리 중 오류가 발생했습니다.
  /sign/userIdCheck:
    post:
      tags:
        - Auth
      summary: 아이디 중복
      operationId: checkUserId
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checkUserIdRequest'
      responses:
        '200':
          description: 중복되지 않는 아이디
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkUserIdResponse'
        '400':
          description: 필수 필드 미전달 또는 형식에 맞지 않는 값 존재
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              examples:
                missingLoginUserId:
                  summary: loginUserId 미전달
                  value:
                    success: false
                    message: loginUserId가 필요합니다.
                invalidLoginUserId:
                  summary: loginUserId 조건 불충족
                  value:
                    success: false
                    message: 'loginUserId는 3-15자의 영어, 숫자만 가능합니다.'
        '409':
          description: 중복된 아이디
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 중복된 아이디입니다.
        '500':
          description: 아이디 중복 검사 중 오류
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 아이디 중복 검사 중 오류가 발생했습니다.
  /mainpage/calendar:
    get:
      summary: 금주 일정 조회
      description: 금주 일정을 조회
      parameters:
        - name: userId
          in: query
          description: 조회할 사용자 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공 - 일정 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    description: '이번 주에 해당하는 일정 '
                    items:
                      type: object
                      properties:
                        calendar_id:
                          type: integer
                          example: 12
                        title:
                          type: string
                          example: 프로젝트 회의
                        time:
                          type: string
                          format: date-time
                          example: '2025-08-27 13:00:00'
                  today:
                    type: integer
                    description: 반환하는 현재 일
                    example: 14
                required:
                  - success
                  - data
        '400':
          description: userId 누락
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 연결실패
                  error:
                    type: string
                    nullable: true
                    example: DB 연결 실패
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 연결실패
                  error:
                    type: string
                    nullable: true
                    example: DB 연결 실패
  /mainpage/feedback:
    get:
      summary: 가장 최근 피드백 조회
      description: 사용자의 가장 최근 피드백 1건을 조회
      parameters:
        - name: userId
          in: query
          description: 조회할 사용자 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공 - 최근 피드백 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    description: 최근 피드백 결과(최대 1건)
                    items:
                      type: object
                      properties:
                        feedback_id:
                          type: integer
                          example: 5
                        userId:
                          type: integer
                          example: 42
                        title:
                          type: string
                          example: 프로젝트 피드백
                        content:
                          type: string
                          example: 피드백성공
                        created_at:
                          type: string
                          format: date-time
                          example: '2025-08-27 13:00:00'
                        days_ago:
                          type: integer
                          example: 4
                required:
                  - success
                  - data
        '400':
          description: userId 누락
          content:
            application/json:
              schema:
                $ref: '#/paths/~1mainpage~1calendar/get/responses/400/content/application~1json/schema'
        '500':
          description: 서버 오류 - 피드백 조회 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1mainpage~1calendar/get/responses/500/content/application~1json/schema'
  /mainpage/question:
    get:
      summary: 오늘의 질문 랜덤 조회
      description: DB의 questions 테이블에서 랜덤으로 1개의 질문을 반환
      responses:
        '200':
          description: 성공 - 오늘의 질문 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    description: 랜덤으로 선택된 질문
                    items:
                      type: object
                      properties:
                        question_id:
                          type: integer
                          example: 3
                        question_text:
                          type: string
                          example: 오늘의 질문 예시
                        created_at:
                          type: string
                          format: date-time
                          example: '2025-08-27 13:00:00'
                required:
                  - success
                  - data
        '500':
          description: 서버 오류 - 질문 조회 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1mainpage~1calendar/get/responses/500/content/application~1json/schema'
  '/notice/{userId}':
    get:
      tags:
        - Notice
      summary: 특정 유저의 알림 조회
      operationId: getNoticesByUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: 알림을 조회할 유저의 ID
      responses:
        '200':
          description: 알림 리스트 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeListResponse'
        '400':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 알림 조회 실패
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 알림 조회 중 오류 발생
  '/notice/{userId}/{noticeId}/read':
    patch:
      tags:
        - Notice
      summary: 특정 알림 읽음 처리
      operationId: markNoticeAsRead
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: 알림 소유자의 유저 ID
        - name: noticeId
          in: path
          required: true
          schema:
            type: integer
            example: 18
          description: 읽음 처리할 알림의 ID
      responses:
        '200':
          description: 읽음 처리 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeReadResponse'
        '400':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 읽음 처리 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 알림 읽음 처리 중 오류 발생
  '/notice/{userId}/read':
    patch:
      tags:
        - Notice
      summary: 모든 알림 읽음 처리
      operationId: markAllNoticesAsRead
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: 모든 알림을 읽음 처리할 유저의 ID
      responses:
        '200':
          description: 모든 알림 읽음 처리 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeReadAllResponse'
        '400':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 읽음 처리 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 알림 읽음 처리 중 오류 발생
  /notice/push-token:
    post:
      tags:
        - Notice
      summary: 푸시 토큰 등록/업데이트
      operationId: registerPushToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushTokenRequest'
      responses:
        '200':
          description: 푸시 토큰 등록/업데이트 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTokenResponse'
        '400':
          description: 필수 필드 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              examples:
                missingUserId:
                  summary: userId 미전달
                  value:
                    success: false
                    message: userId가 필요합니다.
                missingPushToken:
                  summary: pushToken 미전달
                  value:
                    success: false
                    message: pushToken이 필요합니다.
        '500':
          description: 푸시 토큰 저장 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 푸시 토큰 저장 중 오류 발생
  /notice/send:
    post:
      tags:
        - Notice
      summary: 알림 발송
      operationId: sendNotice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendNoticeRequest'
      responses:
        '200':
          description: 알림 발송 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendNoticeResponse'
        '400':
          description: 필수 필드 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              examples:
                missingUserId:
                  summary: userId 미전달
                  value:
                    success: false
                    message: userId가 필요합니다.
                missingTitleOrContent:
                  summary: title 또는 content 미전달
                  value:
                    success: false
                    message: title 또는 content가 필요합니다.
        '500':
          description: 알림 저장 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 알림 저장 중 오류 발생
  /feedback:
    post:
      tags:
        - Feedback
      summary: 새로운 피드백 생성
      operationId: createNewFeedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeedbackRequest'
      responses:
        '200':
          description: 피드백 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeedbackResponse'
        '400':
          description: 필수 정보 누락
        '500':
          description: 서버 오류
  '/feedback/{userId}':
    get:
      tags:
        - Feedback
      summary: 특정 유저의 모든 피드백 리스트 조회
      operationId: getAllFeedbackByUser
      parameters:
        - name: userId
          in: path
          required: true
          description: 피드백을 조회할 유저의 ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 모든 피드백 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackListResponse'
        '400':
          description: userId 미입력
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 서버 오류가 발생했습니다.
  '/feedback/{userId}/{feedbackId}':
    get:
      tags:
        - Feedback
      summary: 피드백 상세 조회
      operationId: getFeedbackDetail
      parameters:
        - name: userId
          in: path
          required: true
          description: 유저 ID
          schema:
            type: integer
            example: 1
        - name: feedbackId
          in: path
          required: true
          description: 피드백 ID
          schema:
            type: integer
            example: 21
      responses:
        '200':
          description: 피드백 상세 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackDetailResponse'
        '404':
          description: 해당 피드백을 찾을 수 없음
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 해당 피드백을 찾을 수 없습니다.
  '/feedback/{feedbackId}/{userId}':
    delete:
      tags:
        - Feedback
      summary: 피드백 삭제
      operationId: deleteFeedback
      parameters:
        - name: feedbackId
          in: path
          required: true
          description: 삭제할 피드백 ID
          schema:
            type: integer
            example: 21
        - name: userId
          in: path
          required: true
          description: 유저 ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 피드백 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dayResponse/allOf/0'
  '/feedback/{userId}/{feedbackId}/title':
    get:
      tags:
        - Feedback
      summary: 피드백 제목 조회
      operationId: getFeedbackTitle
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: feedbackId
          in: path
          required: true
          schema:
            type: integer
            example: 21
      responses:
        '200':
          description: 기존 제목 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackTitleResponse'
    patch:
      tags:
        - Feedback
      summary: 피드백 제목 수정
      operationId: updateFeedbackTitle
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: feedbackId
          in: path
          required: true
          schema:
            type: integer
            example: 21
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTitleRequest'
      responses:
        '200':
          description: 피드백 제목 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dayResponse/allOf/0'
  '/feedback/{userId}/{feedbackId}/memo':
    get:
      tags:
        - Feedback
      summary: 피드백 메모 조회
      operationId: getFeedbackMemo
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: feedbackId
          in: path
          required: true
          schema:
            type: integer
            example: 21
      responses:
        '200':
          description: 기존 메모 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackMemoResponse'
    patch:
      tags:
        - Feedback
      summary: 피드백 메모 수정
      operationId: updateFeedbackMemo
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: feedbackId
          in: path
          required: true
          schema:
            type: integer
            example: 21
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMemoRequest'
      responses:
        '200':
          description: 피드백 메모 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dayResponse/allOf/0'
  '/feedback/{userId}/search/keyword/{keyword}':
    get:
      tags:
        - Feedback
      summary: 특정 유저의 피드백을 키워드로 검색
      operationId: searchFeedbackByKeyword
      parameters:
        - name: userId
          in: path
          required: true
          description: 피드백을 검색할 유저의 ID
          schema:
            type: integer
            example: 1
        - name: keyword
          in: path
          required: true
          description: 검색할 키워드
          schema:
            type: string
            example: 디자인
      responses:
        '200':
          description: 피드백 검색 성공
          content:
            application/json:
              schema:
                $ref: '#/paths/~1feedback~1%7BuserId%7D~1sort/get/responses/200/content/application~1json/schema'
        '400':
          description: 파라미터 누락
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 필수 파라미터가 누락되었습니다.
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 서버 오류가 발생했습니다.
  '/feedback/{userId}/sort':
    get:
      tags:
        - Feedback
      summary: 특정 유저의 피드백을 날짜순으로 정렬
      operationId: sortFeedbackByDate
      parameters:
        - name: userId
          in: path
          required: true
          description: 피드백을 정렬할 유저의 ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 피드백 정렬 성공 (날짜순)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dayResponse/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 피드백 리스트 조회 성공
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: 피드백 ID
                              example: 21
                            title:
                              type: string
                              maxLength: 20
                              description: 피드백 제목
                              example: 피드백 제목 입력
                            memo:
                              type: string
                              maxLength: 30
                              description: 피드백에 대한 메모
                              example: 피드백 메모
                            created_at:
                              type: string
                              format: date
                              description: 생성일자
                              example: '2025-08-25'
        '400':
          description: 파라미터 누락
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 필수 파라미터가 누락되었습니다.
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 서버 오류가 발생했습니다.
  '/feedback/{userId}/sort/alpha':
    get:
      tags:
        - Feedback
      summary: 특정 유저의 피드백을 가나다순으로 정렬
      operationId: sortFeedbackByAlpha
      parameters:
        - name: userId
          in: path
          required: true
          description: 피드백을 정렬할 유저의 ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 피드백 정렬 성공 (가나다순)
          content:
            application/json:
              schema:
                $ref: '#/paths/~1feedback~1%7BuserId%7D~1sort/get/responses/200/content/application~1json/schema'
        '400':
          description: 파라미터 누락
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 필수 파라미터가 누락되었습니다.
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 서버 오류가 발생했습니다.
  '/feedback/pin/{feedbackId}/{userId}':
    patch:
      tags:
        - Feedback
      summary: 피드백 상단 고정
      operationId: pinFeedback
      parameters:
        - name: feedbackId
          in: path
          required: true
          description: 고정할 피드백 ID
          schema:
            type: integer
            example: 21
        - name: userId
          in: path
          required: true
          description: 피드백을 고정할 유저의 ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 피드백 상단 고정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dayResponse/allOf/0'
        '400':
          description: 파라미터 누락
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 필수 파라미터가 누락되었습니다.
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 서버 오류가 발생했습니다.
  '/feedback/unpin/{feedbackId}/{userId}':
    patch:
      tags:
        - Feedback
      summary: 피드백 상단 고정 해제
      operationId: unpinFeedback
      parameters:
        - name: feedbackId
          in: path
          required: true
          description: 고정 해제할 피드백 ID
          schema:
            type: integer
            example: 21
        - name: userId
          in: path
          required: true
          description: 피드백을 고정 해제할 유저의 ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 피드백 상단 고정 해제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dayResponse/allOf/0'
        '400':
          description: 파라미터 누락
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 필수 파라미터가 누락되었습니다.
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 서버 오류가 발생했습니다.
  '/feedback/{feedbackId}/content':
    patch:
      tags:
        - Feedback
      summary: 피드백 본문 내용 수정
      operationId: updateFeedbackContent
      parameters:
        - name: feedbackId
          in: path
          required: true
          description: 수정할 피드백의 ID
          schema:
            type: integer
            example: 21
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeedbackContentRequest'
      responses:
        '200':
          description: 피드백 본문 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dayResponse/allOf/0'
        '404':
          description: 해당 피드백을 찾을 수 없음
  /calendar/month:
    get:
      tags:
        - calendar
      summary: 특정 유저의 해당 달 일정 조회
      operationId: getSearchmonth
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 일정을 조회할 유저의 ID
        - name: year
          in: query
          required: true
          schema:
            type: integer
            example: 2025
          description: 일정을 조회할 연도 값
        - name: month
          in: query
          required: true
          schema:
            type: integer
            example: 8
          description: 일정을 조회할 월 값
      responses:
        '200':
          description: 일정 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/monthResponse'
        '400':
          description: 필수 파라미터 누락
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 미입력 정보가 존재합니다.
        '500':
          description: 일정 조회 실패
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 오류 발생
  /calendar/day:
    get:
      tags:
        - calendar
      summary: 특정 유저의 일정 상세 조회
      operationId: getUserDay
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 일정을 조회할 유저의 ID
        - name: year
          in: query
          required: true
          schema:
            type: integer
            example: 2025
          description: 일정을 조회할 연도 값
        - name: month
          in: query
          required: true
          schema:
            type: integer
            example: 8
          description: 일정을 조회할 월 값
        - name: day
          in: query
          required: true
          schema:
            type: integer
            example: 8
          description: 일정을 조회할 일(day) 값
      responses:
        '200':
          description: '일정이 있으면 일정 반환, 없으면 안내 문구 출력'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dayResponse'
        '400':
          description: 필수 파라미터 누락
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 미입력 정보가 존재합니다.
        '500':
          description: 일정 조회 실패
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 오류 발생
  /calendar/add:
    get:
      tags:
        - calendar
      summary: 일정 생성
      operationId: addDate
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 일정 수정할 유저의 ID
        - name: title
          in: query
          required: true
          schema:
            type: string
            example: 삼성 면접 일정
          description: 제목 설정
        - name: time
          in: query
          required: true
          schema:
            type: string
            format: date-time
            example: '2025-08-27 13:00:00'
          description: '년/월/일, 시간 설정'
        - name: importance
          in: query
          required: true
          schema:
            type: string
            maxLength: 1
            example: S
          description: 중요도 설정
        - name: memo
          in: query
          required: true
          schema:
            type: string
            example: 메모메모
      responses:
        '200':
          description: '일정이 있으면 일정 반환, 없으면 안내 문구 출력'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addDateResponse'
        '400':
          description: 필수 파라미터 누락
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                      - type: object
                        properties:
                          message:
                            example: 미입력 정보가 존재합니다.
                  - allOf:
                      - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                      - type: object
                        properties:
                          message:
                            example: 8자 미만을 입력해 주세요.
                  - allOf:
                      - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                      - type: object
                        properties:
                          message:
                            example: '중요도에는 S, I, N만 입력 가능합니다.'
        '500':
          description: 일정 추가 실패
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 서버 오류 발생
  /calendar/update:
    get:
      tags:
        - calendar
      summary: 일정 수정
      operationId: getCalendarUpdate
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 일정 수정할 유저의 ID
        - name: title
          in: query
          required: false
          schema:
            type: string
            example: 삼성 면접 일정
          description: 제목 설정
        - name: time
          in: query
          required: false
          schema:
            type: string
            format: date-time
            example: '2025-08-27 13:00:00'
          description: '년/월/일, 시간 설정'
        - name: importance
          in: query
          required: false
          schema:
            type: string
            maxLength: 1
            example: S
          description: 중요도 설정
        - name: memo
          in: query
          required: false
          schema:
            type: string
            example: 메모메모
          description: 메모 설정
      responses:
        '200':
          description: 일정 수정
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUpdateResponse'
        '400':
          description: 필수 파라미터 누락
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                      - type: object
                        properties:
                          message:
                            example: 8자 미만을 입력해 주세요.
                  - allOf:
                      - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                      - type: object
                        properties:
                          message:
                            example: '중요도에는 S, I, N만 입력 가능합니다.'
        '500':
          description: 일정 조회 실패
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 오류 발생
  /calendar/delete:
    get:
      tags:
        - calendar
      summary: 일정 삭제
      operationId: getDelete
      parameters:
        - name: calendar_id
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 일정 삭제할 캘린더의 ID
      responses:
        '200':
          description: 일정 삭제
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeleteResponse'
        '400':
          description: 필수 파라미터 누락
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 미입력 정보가 존재합니다
        '500':
          description: 일정 조회 실패
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 오류 발생
  /myPage/myInfo:
    get:
      tags:
        - mypage
      summary: 사용자 정보 조회
      operationId: getUserInfo
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 정보 조회할 사용자 ID
      responses:
        '200':
          description: 사용자 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserInfoResponse'
        '401':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 사용자 정보 조회 중 오류
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 사용자 정보 조회 중 오류가 발생했습니다.
  /user/changePw:
    post:
      tags:
        - mypage
      summary: 비밀번호 변경
      operationId: changePassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changePasswordRequest'
      responses:
        '200':
          description: 비밀번호 변경 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/changePasswordResponse'
        '400':
          description: 필수 필드 미전달 또는 형식에 맞지 않는 값 존재
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              examples:
                missingPassword:
                  summary: password 미전달
                  value:
                    success: false
                    message: password가 필요합니다.
                invalidPassword:
                  summary: password 불일치
                  value:
                    success: false
                    message: 사용자의 password가 올바르지 않습니다.
                missingNewPassword:
                  summary: newPassword 미전달
                  value:
                    success: false
                    message: newPassword가 필요합니다.
                invalidNewPassword:
                  summary: newPassword 조건 불충족
                  value:
                    success: false
                    message: 'newPassword는 8-16자의 영어대소문자, 숫자, 특수문자(!,@,#,$,%,^,&,*)만 가능합니다.'
                missingNewPasswordCheck:
                  summary: newPasswordCheck 미전달
                  value:
                    success: false
                    message: newPasswordCheck가 필요합니다.
                invalidNewPasswordCheck:
                  summary: newPassword와 newPasswordCheck 불일치
                  value:
                    success: false
                    message: 새 비밀번호와 일치하지 않습니다.
        '401':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 비밀번호 변경 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 비밀번호 변경 중 오류가 발생했습니다.
  /user/changeName:
    post:
      tags:
        - mypage
      summary: 닉네임 변경
      operationId: changeNickname
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeNicknameRequest'
      responses:
        '200':
          description: 닉네임 변경 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/changeNicknameResponse'
        '400':
          description: 필수 필드 미전달 또는 형식에 맞지 않는 값 존재
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              examples:
                missingNewName:
                  summary: newName 미전달
                  value:
                    success: false
                    message: newName이 필요합니다.
                invalidNewName:
                  summary: newName 조건 불충족
                  value:
                    success: false
                    message: 'newName은 2-8자의 한글, 영어, 숫자만 가능합니다. (부적절한 단어 사용 x)'
        '401':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 닉네임 변경 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 닉네임 변경 중 오류가 발생했습니다.
  /user/setAppPush:
    get:
      tags:
        - mypage
      summary: 알림 수신 상태 전환
      operationId: setAppPush
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 알림 수신 상태 전환할 사용자 ID
      responses:
        '200':
          description: 알람 수신 상태 전환 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setAppPushResponse'
        '401':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 알림 수신 전환 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 알림 수신 전환 중 오류가 발생했습니다.
  /user/getAppPush:
    get:
      tags:
        - mypage
      summary: 알림 수신 상태 조회
      operationId: getAppPush
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 알림 수신 상태 조회할 사용자 ID
      responses:
        '200':
          description: 알람 수신 상태 조회 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppPushResponse'
        '401':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 알림 수신 상태 조회 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 알림 수신 상태 조회 중 오류가 발생했습니다.
  /user/checkPw:
    post:
      tags:
        - mypage
      summary: 비밀번호 일치 확인
      operationId: checkPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checkPasswordRequest'
      responses:
        '200':
          description: 올바른 비밀번호
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkPasswordResponse'
        '400':
          description: password 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: password가 필요합니다.
        '401':
          description: 필수 필드 미전달 또는 형식에 맞지 않는 값 존재
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              examples:
                missingUserId:
                  summary: userId 미전달
                  value:
                    success: false
                    message: userId가 필요합니다.
                invalidPassword:
                  summary: password 불일치
                  value:
                    success: false
                    message: 올바르지 않은 password입니다.
        '500':
          description: 비밀번호 일치 확인 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 비밀번호 일치 확인 중 오류가 발생했습니다.
  /delete/feedInfo:
    get:
      tags:
        - mypage
      summary: 탈퇴 시 사용자 면접 내역 조회
      operationId: getUserFeedInfo
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 면접 내역 조회할 사용자 ID
      responses:
        '200':
          description: 사용자 면접 내역 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserFeedInfoResponse'
        '401':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 탈퇴 시 사용자 면접 내역 조회 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 탈퇴 시 사용자 면접 내역 조회 중 오류가 발생했습니다.
  /delete/deleteUser:
    get:
      tags:
        - mypage
      summary: 사용자 탈퇴
      operationId: deleteUser
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 탈퇴할 사용자 ID
      responses:
        '200':
          description: 사용자 탈퇴 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteUserResponse'
        '401':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 사용자 탈퇴 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      message:
                        example: 사용자 탈퇴 중 오류가 발생했습니다.
components:
  schemas:
    loginUserRequest:
      type: object
      required:
        - loginUserId
        - password
      properties:
        loginUserId:
          type: string
          example: testuser
        password:
          type: string
          example: password123
    loginUserResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            loginUserId:
              type: string
              example: testuser
            userId:
              type: integer
              example: 1
            nickname:
              type: string
              example: gg
            message:
              example: 로그인을 성공했습니다.
    signupUserRequest:
      type: object
      required:
        - loginUserId
        - nickname
        - password
        - service
        - appPush
      properties:
        loginUserId:
          type: string
          example: testuser
        nickname:
          type: string
          example: 홍길동
        password:
          type: string
          example: password12@
        service:
          type: string
          enum:
            - 'Y'
          example: 'Y'
        appPush:
          type: string
          enum:
            - 'Y'
            - 'N'
          example: 'N'
    signupUserResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 회원가입이 완료되었습니다.
    checkUserIdRequest:
      type: object
      required:
        - loginUserId
      properties:
        loginUserId:
          type: string
          example: testuser
    checkUserIdResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 중복되지 않는 아이디입니다.
    Notice:
      type: object
      properties:
        notice_id:
          type: integer
          example: 1
        title:
          type: string
          example: 제목
        content:
          type: string
          example: 내용
        created_at:
          type: string
          format: date-time
          example: '2025-08-24T12:12:00.000Z'
        is_read:
          type: string
          enum:
            - 'Y'
            - 'N'
          example: 'N'
    NoticeListResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 알림 리스트 조회 성공
            data:
              type: array
              items:
                $ref: '#/components/schemas/Notice'
    NoticeReadResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 1 알림이 읽음 처리되었습니다.
    NoticeReadAllResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 1 유저의 모든 알림이 읽음 처리되었습니다.
    PushTokenRequest:
      type: object
      required:
        - userId
        - pushToken
      properties:
        userId:
          type: integer
          example: 1
        pushToken:
          type: string
          example: pushToken
    PushTokenResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 푸시 토큰이 성공적으로 저장되었습니다.
    SendNoticeRequest:
      type: object
      required:
        - userId
        - title
        - content
      properties:
        userId:
          type: integer
          example: 1
        title:
          type: string
          example: 공지사항
        content:
          type: string
          example: 새로운 기능이 추가되었습니다.
    SendNoticeResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 알림이 전송되었습니다.
            noticeId:
              type: integer
              example: 15
    FeedbackSummary:
      type: object
      properties:
        id:
          type: integer
          description: 피드백 ID
          example: 21
        title:
          type: string
          maxLength: 20
          description: 피드백 제목
          example: 피드백 제목 입력
        memo:
          type: string
          maxLength: 30
          description: 피드백에 대한 메모
          example: 피드백 메모
        created_at:
          type: string
          format: date
          description: 생성일자
          example: '2025-08-25'
    FeedbackDetail:
      type: object
      properties:
        id:
          type: integer
          description: 피드백 ID
          example: 21
        userId:
          type: integer
          description: 사용자 ID
          example: 1
        title:
          type: string
          maxLength: 20
          description: 피드백 제목
          example: 피드백 제목
        good:
          type: string
          description: 좋았던 점
          example: 전체적으로 색감이 통일되어 있어서 보기 편안합니다.
        bad:
          type: string
          description: 아쉬웠던 점
          example: 일부 버튼이 너무 작아서 누르기 힘들어요.
        content:
          type: string
          description: 기타 의견
          example: 다크 모드를 지원해주시면 좋겠습니다.
        memo:
          type: string
          maxLength: 30
          description: 피드백에 대한 메모
          example: 디자이너에게 전달 완료
        created_at:
          type: string
          format: date
          description: 생성일
          example: '2025-08-26'
        pose:
          type: integer
          description: 자세 점수
          example: 90
          minimum: 0
          maximum: 100
        confidence:
          type: integer
          description: 자신감 점수
          example: 55
          minimum: 0
          maximum: 100
        facial:
          type: integer
          description: 표정 점수
          example: 85
          minimum: 0
          maximum: 100
        risk_response:
          type: integer
          description: 위기대처능력 점수
          example: 45
          minimum: 0
          maximum: 100
        tone:
          type: integer
          description: 말투 점수
          example: 60
          minimum: 0
          maximum: 100
        understanding:
          type: integer
          description: 업무이해도 점수
          example: 40
          minimum: 0
          maximum: 100
    FeedbackListResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 피드백 리스트 조회 성공
            data:
              type: array
              items:
                $ref: '#/components/schemas/FeedbackSummary'
    FeedbackDetailResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 피드백 상세 조회 성공
            data:
              $ref: '#/components/schemas/FeedbackDetail'
    UpdateTitleRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          maxLength: 20
          description: 수정할 피드백 제목
          example: 디자인 일부 수정 제안
    UpdateMemoRequest:
      type: object
      required:
        - memo
      properties:
        memo:
          type: string
          maxLength: 30
          description: 수정할 메모 내용
          example: UI/UX팀 검토 예정
    FeedbackTitleResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 피드백 제목 조회 성공
            data:
              type: object
              properties:
                title:
                  type: string
                  example: 피드백 제목입니다.
    FeedbackMemoResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 피드백 메모 조회 성공
            data:
              type: object
              properties:
                memo:
                  type: string
                  example: 피드백 메모입니다.
    CreateFeedbackRequest:
      type: object
      required:
        - userId
        - title
      properties:
        userId:
          type: integer
          example: 1
        title:
          type: string
          maxLength: 20
          example: 새로운 면접 피드백
        memo:
          type: string
          maxLength: 50
          example: 생성 시 남기는 메모입니다.
        good:
          type: string
          example: AI가 분석한 좋았던 점 내용
        bad:
          type: string
          example: AI가 분석한 아쉬웠던 점 내용
        content:
          type: string
          example: AI가 분석한 기타 내용
        pose:
          type: integer
          example: 85
          minimum: 0
          maximum: 100
        confidence:
          type: integer
          example: 70
          minimum: 0
          maximum: 100
        facial:
          type: integer
          example: 90
          minimum: 0
          maximum: 100
        risk_response:
          type: integer
          example: 65
          minimum: 0
          maximum: 100
        tone:
          type: integer
          example: 80
          minimum: 0
          maximum: 100
        understanding:
          type: integer
          example: 75
          minimum: 0
          maximum: 100
    CreateFeedbackResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 피드백이 성공적으로 생성되었습니다.
            data:
              type: object
              properties:
                feedbackId:
                  type: integer
                  example: 101
    UpdateFeedbackContentRequest:
      type: object
      properties:
        userId:
          type: integer
          description: 사용자 ID (본인 확인용)
          example: 1
        good:
          type: string
          description: 수정할 '좋았던 점' 내용
          example: 수정된 좋은 점 내용입니다.
        bad:
          type: string
          description: 수정할 '아쉬웠던 점' 내용
          example: 수정된 아쉬운 점 내용입니다.
        content:
          type: string
          description: 수정할 기타 의견 사항
          example: 수정된 기타 의견 내용
        pose:
          type: integer
          example: 85
          minimum: 0
          maximum: 100
        confidence:
          type: integer
          example: 70
          minimum: 0
          maximum: 100
        facial:
          type: integer
          example: 90
          minimum: 0
          maximum: 100
        risk_response:
          type: integer
          example: 65
          minimum: 0
          maximum: 100
        tone:
          type: integer
          example: 80
          minimum: 0
          maximum: 100
        understanding:
          type: integer
          example: 75
          minimum: 0
          maximum: 100
    calendar:
      type: object
      properties:
        userId:
          type: integer
          example: 1
        year:
          type: integer
          example: 2025
        month:
          type: integer
          example: 8
        day:
          type: integer
          example: 27
        time:
          type: string
          format: date-time
          example: '2025-08-27 13:00:00'
        title:
          type: string
          example: 삼성 면접 일정
        importance:
          type: string
          enum:
            - S
            - I
            - 'N'
          example: 'N'
        memo:
          type: string
          example: 메모메모
    monthResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 캘린더 month 조회 성공
            data:
              type: array
              items:
                type: object
                properties:
                  년도:
                    type: string
                    example: '2025'
                  월:
                    type: string
                    example: '8'
                  일:
                    type: string
                    example: '20'
                  calendar_id:
                    type: integer
                    example: 53
                  title:
                    type: string
                    example: test123
    dayResponse:
      allOf:
        - type: object
          properties:
            success:
              type: boolean
              example: true
            message:
              type: string
              example: 성공 메시지
        - properties:
            message:
              example: 캘린더 day 조회 성공 / 일정이 없습니다
            data:
              type: array
              items:
                type: object
                properties:
                  calendar_id:
                    type: integer
                    example: 53
                  title:
                    type: string
                    example: test123
                  날짜:
                    type: string
                    format: date
                    example: '2025-08-20'
                  시간:
                    type: string
                    example: '17:00'
                  요일:
                    type: string
                    example: 수
                  importance:
                    type: string
                    example: 중요
                  memo:
                    type: string
                    example: test123
    addDateResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 캘린더 일정 추가
            data:
              type: array
              items:
                $ref: '#/components/schemas/calendar'
    getUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 캘린더 일정 수정
            data:
              type: array
              items:
                $ref: '#/components/schemas/calendar'
    getDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              type: string
              example: 캘린더 일정 삭제
    feedList:
      type: object
      properties:
        title:
          type: string
          example: ㅁㅁ회사 면접
        created_at:
          type: string
          format: date-time
          example: '2025-07-21T19:20:27.000Z'
    getUserInfoResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 사용자 정보 조회 성공
            loginUserId:
              type: string
              example: testuser
            nickname:
              type: string
              example: 테스터
            profile:
              type: string
              example: null
    changePasswordRequest:
      type: object
      required:
        - userId
        - password
        - newPassword
        - newPasswordCheck
      properties:
        userId:
          type: integer
          example: 1
        password:
          type: string
          example: password123
        newPassword:
          type: string
          example: password12
        newPasswordCheck:
          type: string
          example: password12
    changePasswordResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 비밀번호 변경 완료
    changeNicknameRequest:
      type: object
      required:
        - userId
        - newName
      properties:
        userId:
          type: integer
          example: 1
        newName:
          type: string
          example: 강아지똥
    changeNicknameResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 닉네임 변경 완료
    setAppPushResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 알람 수신 상태 전환 완료
            status:
              type: string
              enum:
                - 'Y'
                - 'N'
              example: 'Y'
    getAppPushResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 현재 알림 수신 상태 입니다.
            status:
              type: string
              enum:
                - 'Y'
                - 'N'
              example: 'N'
    checkPasswordRequest:
      type: object
      required:
        - userId
        - password
      properties:
        userId:
          type: integer
          example: 1
        password:
          type: string
          example: password123
    checkPasswordResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 올바른 비밀번호입니다.
    getUserFeedInfoResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            count:
              type: integer
              example: 7
            list:
              type: array
              items:
                $ref: '#/components/schemas/feedList'
    deleteUserResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 사용자 탈퇴 완료
