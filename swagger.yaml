openapi: 3.0.4
info:
  title: AInterview API
  version: 1.0.0
paths:
  '/notice/{userId}':
    get:
      tags:
        - Notice
      summary: 특정 유저의 알림 조회
      operationId: getNoticesByUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: 알림을 조회할 유저의 ID
      responses:
        '200':
          description: 알림 리스트 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeListResponse'
        '400':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 알림 조회 실패
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 알림 조회 중 오류 발생
  '/notice/{userId}/{noticeId}/read':
    patch:
      tags:
        - Notice
      summary: 특정 알림 읽음 처리
      operationId: markNoticeAsRead
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: 알림 소유자의 유저 ID
        - name: noticeId
          in: path
          required: true
          schema:
            type: integer
            example: 18
          description: 읽음 처리할 알림의 ID
      responses:
        '200':
          description: 읽음 처리 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeReadResponse'
        '400':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 읽음 처리 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 알림 읽음 처리 중 오류 발생
  '/notice/{userId}/read':
    patch:
      tags:
        - Notice
      summary: 모든 알림 읽음 처리
      operationId: markAllNoticesAsRead
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: 모든 알림을 읽음 처리할 유저의 ID
      responses:
        '200':
          description: 모든 알림 읽음 처리 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeReadAllResponse'
        '400':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 읽음 처리 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 알림 읽음 처리 중 오류 발생
  /notice/push-token:
    post:
      tags:
        - Notice
      summary: 푸시 토큰 등록/업데이트
      operationId: registerPushToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushTokenRequest'
      responses:
        '200':
          description: 푸시 토큰 등록/업데이트 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTokenResponse'
        '400':
          description: 필수 필드 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
              examples:
                missingUserId:
                  summary: userId 미전달
                  value:
                    success: false
                    message: userId가 필요합니다.
                missingPushToken:
                  summary: pushToken 미전달
                  value:
                    success: false
                    message: pushToken이 필요합니다.
        '500':
          description: 푸시 토큰 저장 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 푸시 토큰 저장 중 오류 발생
  /notice/send:
    post:
      tags:
        - Notice
      summary: 알림 발송
      operationId: sendNotice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendNoticeRequest'
      responses:
        '200':
          description: 알림 발송 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendNoticeResponse'
        '400':
          description: 필수 필드 미전달
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: 에러 메시지
              examples:
                missingUserId:
                  summary: userId 미전달
                  value:
                    success: false
                    message: userId가 필요합니다.
                missingTitleOrContent:
                  summary: title 또는 content 미전달
                  value:
                    success: false
                    message: title 또는 content가 필요합니다.
        '500':
          description: 알림 저장 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 알림 저장 중 오류 발생
  '/feedback/{userId}':
    get:
      tags:
        - Feedback
      summary: 특정 유저의 모든 피드백 리스트 조회
      operationId: getAllFeedbackByUser
      parameters:
        - name: userId
          in: path
          required: true
          description: 피드백을 조회할 유저의 ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 모든 피드백 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackListResponse'
        '400':
          description: userId 미입력
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 서버 오류가 발생했습니다.
  '/feedback/{userId}/{feedbackId}':
    get:
      tags:
        - Feedback
      summary: 피드백 상세 조회
      operationId: getFeedbackDetail
      parameters:
        - name: userId
          in: path
          required: true
          description: 유저 ID
          schema:
            type: integer
            example: 1
        - name: feedbackId
          in: path
          required: true
          description: 피드백 ID
          schema:
            type: integer
            example: 21
      responses:
        '200':
          description: 피드백 상세 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackDetailResponse'
        '404':
          description: 해당 피드백을 찾을 수 없음
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 해당 피드백을 찾을 수 없습니다.
  '/feedback/{feedbackId}/{userId}':
    delete:
      tags:
        - Feedback
      summary: 피드백 삭제
      operationId: deleteFeedback
      parameters:
        - name: feedbackId
          in: path
          required: true
          description: 삭제할 피드백 ID
          schema:
            type: integer
            example: 21
        - name: userId
          in: path
          required: true
          description: 유저 ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 피드백 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTokenResponse/allOf/0'
  '/feedback/{userId}/{feedbackId}/title':
    get:
      tags:
        - Feedback
      summary: 피드백 제목 조회
      operationId: getFeedbackTitle
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: feedbackId
          in: path
          required: true
          schema:
            type: integer
            example: 21
      responses:
        '200':
          description: 기존 제목 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackTitleResponse'
    patch:
      tags:
        - Feedback
      summary: 피드백 제목 수정
      operationId: updateFeedbackTitle
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: feedbackId
          in: path
          required: true
          schema:
            type: integer
            example: 21
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTitleRequest'
      responses:
        '200':
          description: 피드백 제목 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTokenResponse/allOf/0'
  '/feedback/{userId}/{feedbackId}/memo':
    get:
      tags:
        - Feedback
      summary: 피드백 메모 조회
      operationId: getFeedbackMemo
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: feedbackId
          in: path
          required: true
          schema:
            type: integer
            example: 21
      responses:
        '200':
          description: 기존 메모 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackMemoResponse'
    patch:
      tags:
        - Feedback
      summary: 피드백 메모 수정
      operationId: updateFeedbackMemo
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: feedbackId
          in: path
          required: true
          schema:
            type: integer
            example: 21
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMemoRequest'
      responses:
        '200':
          description: 피드백 메모 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTokenResponse/allOf/0'
components:
  schemas:
    Notice:
      type: object
      properties:
        notice_id:
          type: integer
          example: 1
        title:
          type: string
          example: 제목
        content:
          type: string
          example: 내용
        created_at:
          type: string
          format: date-time
          example: '2025-08-24T12:12:00.000Z'
        is_read:
          type: string
          enum:
            - 'Y'
            - 'N'
          example: 'N'
    NoticeListResponse:
      allOf:
        - $ref: '#/components/schemas/PushTokenResponse/allOf/0'
        - properties:
            message:
              example: 알림 리스트 조회 성공
            data:
              type: array
              items:
                $ref: '#/components/schemas/Notice'
    NoticeReadResponse:
      allOf:
        - $ref: '#/components/schemas/PushTokenResponse/allOf/0'
        - properties:
            message:
              example: 1 알림이 읽음 처리되었습니다.
    NoticeReadAllResponse:
      allOf:
        - $ref: '#/components/schemas/PushTokenResponse/allOf/0'
        - properties:
            message:
              example: 1 유저의 모든 알림이 읽음 처리되었습니다.
    PushTokenRequest:
      type: object
      required:
        - userId
        - pushToken
      properties:
        userId:
          type: integer
          example: 1
        pushToken:
          type: string
          example: pushToken
    PushTokenResponse:
      allOf:
        - type: object
          properties:
            success:
              type: boolean
              example: true
            message:
              type: string
              example: 성공 메시지
        - properties:
            message:
              example: 푸시 토큰이 성공적으로 저장되었습니다.
    SendNoticeRequest:
      type: object
      required:
        - userId
        - title
        - content
      properties:
        userId:
          type: integer
          example: 1
        title:
          type: string
          example: 공지사항
        content:
          type: string
          example: 새로운 기능이 추가되었습니다.
    SendNoticeResponse:
      allOf:
        - $ref: '#/components/schemas/PushTokenResponse/allOf/0'
        - properties:
            message:
              example: 알림이 전송되었습니다.
            noticeId:
              type: integer
              example: 15
    FeedbackSummary:
      type: object
      properties:
        id:
          type: integer
          description: 피드백 ID
          example: 21
        title:
          type: string
          maxLength: 20
          description: 피드백 제목
          example: 피드백 제목 입력
        memo:
          type: string
          maxLength: 30
          description: 피드백에 대한 메모
          example: 피드백 메모
        created_at:
          type: string
          format: date
          description: 생성일자
          example: '2025-08-25'
    FeedbackDetail:
      type: object
      properties:
        id:
          type: integer
          description: 피드백 ID
          example: 21
        userId:
          type: integer
          description: 사용자 ID
          example: 1
        title:
          type: string
          maxLength: 20
          description: 피드백 제목
          example: 피드백 제목
        good:
          type: string
          description: 좋았던 점
          example: 전체적으로 색감이 통일되어 있어서 보기 편안합니다.
        bad:
          type: string
          description: 아쉬웠던 점
          example: 일부 버튼이 너무 작아서 누르기 힘들어요.
        content:
          type: string
          description: 기타 의견
          example: 다크 모드를 지원해주시면 좋겠습니다.
        memo:
          type: string
          maxLength: 30
          description: 피드백에 대한 메모
          example: 디자이너에게 전달 완료
        created_at:
          type: string
          format: date
          description: 생성일
          example: '2025-08-26'
    FeedbackListResponse:
      allOf:
        - $ref: '#/components/schemas/PushTokenResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 피드백 리스트 조회 성공
            data:
              type: array
              items:
                $ref: '#/components/schemas/FeedbackSummary'
    FeedbackDetailResponse:
      allOf:
        - $ref: '#/components/schemas/PushTokenResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 피드백 상세 조회 성공
            data:
              $ref: '#/components/schemas/FeedbackDetail'
    UpdateTitleRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          maxLength: 20
          description: 수정할 피드백 제목
          example: 디자인 일부 수정 제안
    UpdateMemoRequest:
      type: object
      required:
        - memo
      properties:
        memo:
          type: string
          maxLength: 30
          description: 수정할 메모 내용
          example: UI/UX팀 검토 예정
    FeedbackTitleResponse:
      allOf:
        - $ref: '#/components/schemas/PushTokenResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 피드백 제목 조회 성공
            data:
              type: object
              properties:
                title:
                  type: string
                  example: 피드백 제목입니다.
    FeedbackMemoResponse:
      allOf:
        - $ref: '#/components/schemas/PushTokenResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 피드백 메모 조회 성공
            data:
              type: object
              properties:
                memo:
                  type: string
                  example: 피드백 메모입니다.
