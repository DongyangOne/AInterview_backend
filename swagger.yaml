openapi: 3.0.4
info:
  title: AInterview API
  version: 1.0.0
paths:
  '/notice/{userId}':
    get:
      tags:
        - Notice
      summary: 특정 유저의 알림 조회
      operationId: getNoticesByUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: 알림을 조회할 유저의 ID
      responses:
        '200':
          description: 알림 리스트 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeListResponse'
        '400':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 알림 조회 실패
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 알림 조회 중 오류 발생
  '/notice/{userId}/{noticeId}/read':
    patch:
      tags:
        - Notice
      summary: 특정 알림 읽음 처리
      operationId: markNoticeAsRead
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: 알림 소유자의 유저 ID
        - name: noticeId
          in: path
          required: true
          schema:
            type: integer
            example: 18
          description: 읽음 처리할 알림의 ID
      responses:
        '200':
          description: 읽음 처리 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeReadResponse'
        '400':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 읽음 처리 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 알림 읽음 처리 중 오류 발생
  '/notice/{userId}/read':
    patch:
      tags:
        - Notice
      summary: 모든 알림 읽음 처리
      operationId: markAllNoticesAsRead
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: 모든 알림을 읽음 처리할 유저의 ID
      responses:
        '200':
          description: 모든 알림 읽음 처리 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeReadAllResponse'
        '400':
          description: userId 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: userId가 필요합니다.
        '500':
          description: 읽음 처리 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 알림 읽음 처리 중 오류 발생
  /notice/push-token:
    post:
      tags:
        - Notice
      summary: 푸시 토큰 등록/업데이트
      operationId: registerPushToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushTokenRequest'
      responses:
        '200':
          description: 푸시 토큰 등록/업데이트 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTokenResponse'
        '400':
          description: 필수 필드 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              examples:
                missingUserId:
                  summary: userId 미전달
                  value:
                    success: false
                    message: userId가 필요합니다.
                missingPushToken:
                  summary: pushToken 미전달
                  value:
                    success: false
                    message: pushToken이 필요합니다.
        '500':
          description: 푸시 토큰 저장 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 푸시 토큰 저장 중 오류 발생
  /notice/send:
    post:
      tags:
        - Notice
      summary: 알림 발송
      operationId: sendNotice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendNoticeRequest'
      responses:
        '200':
          description: 알림 발송 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendNoticeResponse'
        '400':
          description: 필수 필드 미전달
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              examples:
                missingUserId:
                  summary: userId 미전달
                  value:
                    success: false
                    message: userId가 필요합니다.
                missingTitleOrContent:
                  summary: title 또는 content 미전달
                  value:
                    success: false
                    message: title 또는 content가 필요합니다.
        '500':
          description: 알림 저장 중 오류 발생
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 알림 저장 중 오류 발생
  /sign/login:
    post:
      tags:
        - Auth
      summary: 로그인
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUserRequest'
      responses:
        '200':
          description: 사용자 로그인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginUserResponse'
        '400':
          description: 필수 필드 미전달
  /calendar/month:
    get:
      tags:
        - calendar
      summary: 특정 유저의 해당 달 일정 조회
      operationId: getSearchmonth
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 일정을 조회할 유저의 ID
        - name: year
          in: query
          required: true
          schema:
            type: integer
            example: 2025
          description: 일정을 조회할 연도 값
        - name: month
          in: query
          required: true
          schema:
            type: integer
            example: 8
          description: 일정을 조회할 월 값
      responses:
        '200':
          description: 일정 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/monthResponse'
        '400':
          description: 필수 파라미터 누락
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: 에러 메시지
              examples:
                missingLoginUserId:
                  summary: loginUserId 미전달
                  value:
                    success: false
                    message: loginUserId가 필요합니다.
                missingPassword:
                  summary: password 미전달
                  value:
                    success: false
                    message: password가 필요합니다.
        '401':
          description: 잘못된 비밀번호
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 미입력 정보가 존재합니다.
        '500':
          description: 일정 조회 실패
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 비밀번호를 틀렸습니다.
        '404':
          description: 해당 유저를 찾을 수 없음
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 오류 발생
  /calendar/day:
    get:
      tags:
        - calendar
      summary: 특정 유저의 일정 상세 조회
      operationId: getUserDay
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 일정을 조회할 유저의 ID
        - name: year
          in: query
          required: true
          schema:
            type: integer
            example: 2025
          description: 일정을 조회할 연도 값
        - name: month
          in: query
          required: true
          schema:
            type: integer
            example: 8
          description: 일정을 조회할 월 값
        - name: day
          in: query
          required: true
          schema:
            type: integer
            example: 8
          description: 일정을 조회할 일(day) 값
      responses:
        '200':
          description: '일정이 있으면 일정 반환, 없으면 안내 문구 출력'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dayResponse'
        '400':
          description: 필수 파라미터 누락
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 해당 유저를 찾을 수가 없습니다.
        '500':
          description: 로그인 처리 중 오류
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 미입력 정보가 존재합니다.
        '500':
          description: 일정 조회 실패
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 로그인 처리 중 오류가 발생했습니다.
  /sign/signup:
    post:
      tags:
        - Auth
      summary: 회원가입
      operationId: signupUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signupUserRequest'
      responses:
        '201':
          description: 회원가입 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signupUserResponse'
        '400':
          description: 필수 필드 미전달 또는 형식에 맞지 않는 값 존재
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              examples:
                missingLoginUserId:
                  summary: loginUserId 미전달
                  value:
                    success: false
                    message: loginUserId가 필요합니다.
                missingPassword:
                  summary: password 미전달
                  value:
                    success: false
                    message: password가 필요합니다.
                missingNickname:
                  summary: nickname 미전달
                  value:
                    success: false
                    message: nickname이 필요합니다.
                invalidLoginUserId:
                  summary: loginUserId 조건 불충족
                  value:
                    success: false
                    message: 'loginUserId는 3-15자의 영어, 숫자만 가능합니다.'
                invalidPassword:
                  summary: password 조건 불충족
                  value:
                    success: false
                    message: 'password는 8-16자의 영어대소문자, 숫자, 특수문자(!,@,#,$,%,^,&,*)만 가능합니다.'
                invalidNickname:
                  summary: nickname 조건 불충족
                  value:
                    success: false
                    message: 'nickname은 2-8자의 한글, 영어, 숫자만 가능합니다. (부적절한 단어 사용 x)'
                termsNotAccepted:
                  summary: 서비스 이용약관 동의 안함
                  value:
                    success: false
                    message: 서비스 이용약관에 동의해주세요.
        '409':
          description: 중복된 아이디
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 중복된 아이디입니다.
        '500':
          description: 회원가입 처리 중 오류
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 오류 발생
  /calendar/add:
    get:
      tags:
        - calendar
      summary: 일정 생성
      operationId: addDate
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 일정 수정할 유저의 ID
        - name: title
          in: query
          required: true
          schema:
            type: string
            example: 삼성 면접 일정
          description: 제목 설정
        - name: time
          in: query
          required: true
          schema:
            type: string
            format: date-time
            example: '2025-08-27 13:00:00'
          description: '년/월/일, 시간 설정'
        - name: importance
          in: query
          required: true
          schema:
            type: string
            maxLength: 1
            example: S
          description: 중요도 설정
        - name: memo
          in: query
          required: true
          schema:
            type: string
            example: 메모메모
      responses:
        '200':
          description: '일정이 있으면 일정 반환, 없으면 안내 문구 출력'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addDateResponse'
        '400':
          description: 필수 파라미터 누락
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                      - properties:
                          message:
                            example: 미입력 정보가 존재합니다.
                  - allOf:
                      - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                      - properties:
                          message:
                            example: 8자 미만을 입력해 주세요.
                  - allOf:
                      - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                      - properties:
                          message:
                            example: '중요도에는 S, I, N만 입력 가능합니다.'
        '500':
          description: 일정 추가 실패
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 회원가입 처리 중 오류가 발생했습니다.
  /sign/userIdCheck:
    post:
      tags:
        - Auth
      summary: 아이디 중복
      operationId: checkUserId
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checkUserIdRequest'
      responses:
        '200':
          description: 중복되지 않는 아이디
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkUserIdResponse'
        '400':
          description: 필수 필드 미전달 또는 형식에 맞지 않는 값 존재
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 서버 오류 발생
  /calendar/update:
    get:
      tags:
        - calendar
      summary: 일정 수정
      operationId: getCalendarUpdate
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 일정 수정할 유저의 ID
        - name: title
          in: query
          required: false
          schema:
            type: string
            example: 삼성 면접 일정
          description: 제목 설정
        - name: time
          in: query
          required: false
          schema:
            type: string
            format: date-time
            example: '2025-08-27 13:00:00'
          description: '년/월/일, 시간 설정'
        - name: importance
          in: query
          required: false
          schema:
            type: string
            maxLength: 1
            example: S
          description: 중요도 설정
        - name: memo
          in: query
          required: false
          schema:
            type: string
            example: 메모메모
          description: 메모 설정
      responses:
        '200':
          description: 일정 수정
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUpdateResponse'
        '400':
          description: 필수 파라미터 누락
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                      - properties:
                          message:
                            example: 8자 미만을 입력해 주세요.
                  - allOf:
                      - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                      - properties:
                          message:
                            example: '중요도에는 S, I, N만 입력 가능합니다.'
        '500':
          description: 일정 조회 실패
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              examples:
                missingLoginUserId:
                  summary: loginUserId 미전달
                  value:
                    success: false
                    message: loginUserId가 필요합니다.
                invalidLoginUserId:
                  summary: loginUserId 조건 불충족
                  value:
                    success: false
                    message: 'loginUserId는 3-15자의 영어, 숫자만 가능합니다.'
        '409':
          description: 중복된 아이디
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 오류 발생
  /calendar/delete:
    get:
      tags:
        - calendar
      summary: 일정 삭제
      operationId: getDelete
      parameters:
        - name: calendar_id
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: 일정 삭제할 캘린더의 ID
      responses:
        '200':
          description: 일정 삭제
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeleteResponse'
        '400':
          description: 필수 파라미터 누락
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 중복된 아이디입니다.
        '500':
          description: 아이디 중복 검사 중 오류
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 미입력 정보가 존재합니다
        '500':
          description: 일정 조회 실패
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1sign~1login/post/responses/400/content/application~1json/schema/allOf/0'
              example:
                value:
                  success: false
                  message: 아이디 중복 검사 중 오류가 발생했습니다.
                  - $ref: '#/paths/~1notice~1send/post/responses/400/content/application~1json/schema/allOf/0'
                  - properties:
                      message:
                        example: 오류 발생
components:
  schemas:
    Notice:
      type: object
      properties:
        notice_id:
          type: integer
          example: 1
        title:
          type: string
          example: 제목
        content:
          type: string
          example: 내용
        created_at:
          type: string
          format: date-time
          example: '2025-08-24T12:12:00.000Z'
        is_read:
          type: string
          enum:
            - 'Y'
            - 'N'
          example: 'N'
    NoticeListResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 알림 리스트 조회 성공
            data:
              type: array
              items:
                $ref: '#/components/schemas/Notice'
    NoticeReadResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 1 알림이 읽음 처리되었습니다.
    NoticeReadAllResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 1 유저의 모든 알림이 읽음 처리되었습니다.
    PushTokenRequest:
      type: object
      required:
        - userId
        - pushToken
      properties:
        userId:
          type: integer
          example: 1
        pushToken:
          type: string
          example: pushToken
    PushTokenResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 푸시 토큰이 성공적으로 저장되었습니다.
    SendNoticeRequest:
      type: object
      required:
        - userId
        - title
        - content
      properties:
        userId:
          type: integer
          example: 1
        title:
          type: string
          example: 공지사항
        content:
          type: string
          example: 새로운 기능이 추가되었습니다.
    SendNoticeResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 알림이 전송되었습니다.
            noticeId:
              type: integer
              example: 15
    loginUserRequest:
      type: object
      required:
        - loginUserId
        - password
      properties:
        loginUserId:
          type: string
          example: testuser
        password:
          type: string
          example: password123
    loginUserResponse:
      allOf:
        - $ref: '#/components/schemas/PushTokenResponse/allOf/0'
        - type: object
          properties:
            loginUserId:
              type: string
              example: testuser
            userId:
              type: integer
              example: 1
            nickname:
              type: string
              example: gg
            message:
              example: 로그인을 성공했습니다.
    signupUserRequest:
      type: object
      required:
        - loginUserId
        - nickname
        - password
        - service
        - appPush
      properties:
        loginUserId:
          type: string
          example: testuser
        nickname:
          type: string
          example: 홍길동
        password:
          type: string
          example: password12@
        service:
          type: string
          enum:
            - 'Y'
          example: 'Y'
        appPush:
          type: string
          enum:
            - 'Y'
            - 'N'
          example: 'N'
    signupUserResponse:
      allOf:
        - $ref: '#/components/schemas/PushTokenResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 회원가입이 완료되었습니다.
    checkUserIdRequest:
      type: object
      required:
        - loginUserId
      properties:
        loginUserId:
          type: string
          example: testuser
    checkUserIdResponse:
      allOf:
        - $ref: '#/components/schemas/PushTokenResponse/allOf/0'
        - type: object
          properties:
            message:
              example: 중복되지 않는 아이디입니다.
    calendar:
      type: object
      properties:
        userId:
          type: integer
          example: 1
        year:
          type: integer
          example: 2025
        month:
          type: integer
          example: 8
        day:
          type: integer
          example: 27
        time:
          type: string
          format: date-time
          example: '2025-08-27 13:00:00'
        title:
          type: string
          example: 삼성 면접 일정
        importance:
          type: string
          enum:
            - S
            - I
            - 'N'
          example: 'N'
        memo:
          type: string
          example: 메모메모
    monthResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 캘린더 month 조회 성공
            data:
              type: array
              items:
                type: object
                properties:
                  년도:
                    type: string
                    example: '2025'
                  월:
                    type: string
                    example: '8'
                  일:
                    type: string
                    example: '20'
                  calendar_id:
                    type: integer
                    example: 53
                  title:
                    type: string
                    example: test123
    dayResponse:
      allOf:
        - type: object
          properties:
            success:
              type: boolean
              example: true
            message:
              type: string
              example: 성공 메시지
        - properties:
            message:
              example: 캘린더 day 조회 성공 / 일정이 없습니다
            data:
              type: array
              items:
                type: object
                properties:
                  calendar_id:
                    type: integer
                    example: 53
                  title:
                    type: string
                    example: test123
                  날짜:
                    type: string
                    format: date
                    example: '2025-08-20'
                  시간:
                    type: string
                    example: '17:00'
                  요일:
                    type: string
                    example: 수
                  importance:
                    type: string
                    example: 중요
                  memo:
                    type: string
                    example: test123
    addDateResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 캘린더 일정 추가
            data:
              type: array
              items:
                $ref: '#/components/schemas/calendar'
    getUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              example: 캘린더 일정 수정
            data:
              type: array
              items:
                $ref: '#/components/schemas/calendar'
    getDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/dayResponse/allOf/0'
        - properties:
            message:
              type: string
              example: 캘린더 일정 삭제